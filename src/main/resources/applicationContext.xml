<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--配置Spring-->
    <!--开启组件扫描,但不扫描控制器-->
    <context:component-scan base-package="com.atstuding">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--================================数据源配置文件的位置========================-->
    <context:property-placeholder location="classpath:jdbc.properties" ></context:property-placeholder>
    <!--引入数据源-->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--==================================Spring 整合mybatis===========================-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
        <!--配置mybatis全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--配置数据源-->
        <property name="dataSource" ref="druidDataSource"></property>
        <!--指定mybatis mapper文件的位置-->
        <property name="mapperLocations" value="classpath:com/atstuding/ems/mapper/*Mapper.xml"></property>
    </bean>

    <!--配置mapper扫描器，将mybatis接口实现类加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描mapper中的所有接口的实现-->
        <property name="basePackage" value="com.atstuding.ems.mapper"></property>
    </bean>

    <!-- 获取sqlSession 处理方式为batch-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" >
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>

    <!--=======================事务管理========================-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource"></property>
    </bean>

    <!--配置切面-->
    <aop:config>
        <!--配置切入点-->
        <aop:pointcut id="txPoint" expression="execution(* com.atstuding.ems..*(..))"/>
        <!--配置引入增强的-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"></aop:advisor>
    </aop:config>
    <!--配置事务管理增强-->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <!--所有的方法都配置事务-->
            <tx:method name="*"/>
            <!--以get开头的方法-->
            <tx:method name="get*" read-only="true"></tx:method>
        </tx:attributes>
    </tx:advice>



</beans>